version: 4.0.0

orbs:
  python: circleci/python@2.1.1
  ansible: circleci/ansible@0.2.3
  codecov: codecov/codecov@3.2.4

jobs:
  rebuild:
    docker:
      - image: circleci/python:3.9.7-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ""
      MY_ENV_VAR: "my-value"
    steps:
      - checkout
      - run:
          name: Clean build artifacts
          command: rm -rf build/
      - run:
          name: Rebuild project
          command: tox -r

  build:
    docker:
      - image: circleci/python:3.9.7-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ""
      DJANGO_SETTINGS_MODULE: config.settings.development
      MY_ENV_VAR: "my-value"
    steps:
      - checkout
      - python/install-packages:
          requirements-file: requirements.txt
      - run:
          name: Run tests
          command: tox
      - codecov/upload:
          requires:
            - build

  deploy:
    docker:
      - image: circleci/python:3.9.7-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ""
      ANSIBLE_FORCE_COLOR: "true"
    steps:
      - attach_workspace:
          at: .
      - ansible/install:
          version: 2.9.9
      - ansible/playbook:
          inventory: config-playbooks/hosts
          playbook: config-playbooks/ansible_update.yml
          extra-vars: '{"env": "production", "project_path": "/path/to/project"}'
      - run:
          name: Confirm successful deployment
          command: echo "Deployment to production was successful."

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - python/rebuild:
          filters:
            branches:
              only: develop
      - python/rebuild:
          filters:
            branches:
              only: release
      - build:
          filters:
            branches:
              only: develop
      - build:
          filters:
            branches:
              only: release
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main
